name: Test Publish Release

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version for manual hotfix release.'
        required: false
        default: ''

concurrency:
  group: publish-release
  cancel-in-progress: false

jobs:
  pre-release-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Version from the PR title.
        if: github.event_name == 'pull_request'
        run: |
          echo "GITHUB_TAG_MAJOR_VERSION=${{ github.event.pull_request.title }}" >> ${GITHUB_ENV}

      - name: Major Version in Upgrade Handler Must Match Tag
        if: github.event_name == 'pull_request'
        run: |
          UPGRADE_HANDLER_MAJOR_VERSION=$(cat app/setup_handlers.go | grep "const releaseVersion" | cut -d ' ' -f4 | tr -d '"')
          echo $UPGRADE_HANDLER_MAJOR_VERSION
          echo $GITHUB_TAG_MAJOR_VERSION
          if [ $GITHUB_TAG_MAJOR_VERSION != $UPGRADE_HANDLER_MAJOR_VERSION ]; then
            echo "ERROR: The major version of this release (${{ github.ref_name }}) does not match the major version in the releaseVersion constant ($UPGRADE_HANDLER_MAJOR_VERSION) found in app/setup_handlers.go"
            echo "Did you forget to update the 'releaseVersion' in app/setup_handlers.go?" 
            exit 1
          fi
          echo "The major version found in 'releaseVersion' in app/setup_handlers.go matches this tagged release - Moving Forward!"

  publish-release:
    runs-on: buildjet-4vcpu-ubuntu-2004
    timeout-minutes: 60
    needs:
      - pre-release-checks
    steps:
      - uses: actions/checkout@v3

      - name: Echo Release Notes from PR Message.
        if: github.event_name == 'pull_request'
        id: release_notes
        run: |
          cat changelog.md > ${{ github.workspace }}-CHANGELOG.txt
          cat ${{ github.workspace }}-CHANGELOG.txt

      - name: Set Version from the PR title.
        if: github.event_name == 'pull_request'
        run: |
          echo "GITHUB_TAG_MAJOR_VERSION=${{ github.event.pull_request.title }}" >> ${GITHUB_ENV}
